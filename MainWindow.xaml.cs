using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Data;
using E9361App.DBHelper;
using E9361App.Maintain;

namespace e9361debug
{
    /// <summary>
    /// MainWindow.xaml 的交互逻辑
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();

            DataSet ds = SQLiteHelper.Query("select * from t_chkPara");

            byte mainFunc;
            byte subFucn;
            int start;
            int len;
            byte[] data;

            byte[] b = new byte[] { 0x20, 0x22, 0x6C, 0x69, 0x6E, 0x6B, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x64, 0x65, 0x76, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x65, 0x67, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x74, 0xAA, 0xFF, 0xFF, 0x8A, 0x03, 0x01, 0x06, 0x00, 0x00, 0x7B, 0x0D, 0x0A, 0x20, 0x20, 0x22, 0x44, 0x65, 0x76, 0x53, 0x65, 0x6C, 0x66, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x52, 0x6F, 0x6F, 0x74, 0x22, 0x3A, 0x20, 0x5B, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7B, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6C, 0x69, 0x6E, 0x6B, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x64, 0x65, 0x76, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x65, 0x67, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x4E, 0x61, 0x6D, 0x65, 0x22, 0x3A, 0x20, 0x22, 0xE8, 0xAE, 0xA1, 0xE9, 0x87, 0x8F, 0xE8, 0x8A, 0xAF, 0xE7, 0x89, 0x87, 0xE7, 0x9A, 0x84, 0xE8, 0x84, 0x89, 0xE5, 0x86, 0xB2, 0xE8, 0xBE, 0x93, 0xE5, 0x85, 0xA5, 0xE4, 0xBF, 0xA1, 0xE5, 0x8F, 0xB7, 0x31, 0xEF, 0xBC, 0x88, 0xE5, 0xA4, 0x87, 0xE7, 0x94, 0xA8, 0xEF, 0xBC, 0x89, 0x22, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x55, 0x6E, 0x69, 0x74, 0x22, 0x3A, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x61, 0x74, 0x69, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x3A, 0x20, 0x31, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7D, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7B, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6C, 0x69, 0x6E, 0x6B, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x64, 0x65, 0x76, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x65, 0x67, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x31, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x4E, 0x61, 0x6D, 0x65, 0x22, 0x3A, 0x20, 0x22, 0xE8, 0xAE, 0xA1, 0xE9, 0x87, 0x8F, 0xE8, 0x8A, 0xAF, 0xE7, 0x89, 0x87, 0xE7, 0x9A, 0x84, 0xE8, 0x84, 0x89, 0xE5, 0x86, 0xB2, 0xE8, 0xBE, 0x93, 0xE5, 0x85, 0xA5, 0xE4, 0xBF, 0xA1, 0xE5, 0x8F, 0xB7, 0x32, 0xEF, 0xBC, 0x88, 0xE5, 0xA4, 0x87, 0xE7, 0x94, 0xA8, 0xEF, 0xBC, 0x89, 0x22, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x55, 0x6E, 0x69, 0x74, 0x22, 0x3A, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x61, 0x74, 0x69, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x3A, 0x20, 0x32, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7D, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7B, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6C, 0x69, 0x6E, 0x6B, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x64, 0x65, 0x76, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x65, 0x67, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x32, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x4E, 0x61, 0x6D, 0x65, 0x22, 0x3A, 0x20, 0x22, 0xE9, 0xA2, 0x84, 0xE7, 0xBD, 0xAE, 0xE7, 0xBB, 0xA7, 0xE7, 0x94, 0xB5, 0xE5, 0x99, 0xA8, 0xE8, 0xBF, 0x94, 0xE6, 0xA0, 0xA1, 0xE5, 0x80, 0xBC, 0x22, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x55, 0x6E, 0x69, 0x74, 0x22, 0x3A, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x61, 0x74, 0x69, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x3A, 0x20, 0x33, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7D, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7B, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6C, 0x69, 0x6E, 0x6B, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x64, 0x65, 0x76, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x65, 0x67, 0x4E, 0x6F, 0x22, 0x3A, 0x20, 0x33, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x4E, 0x61, 0x6D, 0x65, 0x22, 0x3A, 0x20, 0x22, 0x77, 0x35, 0x35, 0x30, 0x30, 0xE4, 0xB8, 0xAD, 0xE6, 0x96, 0xAD, 0xE4, 0xBF, 0xA1, 0xE5, 0x8F, 0xB7, 0x2D, 0x4E, 0x65, 0x74, 0x33, 0xEF, 0xBC, 0x88, 0xE5, 0xA4, 0x87, 0xE7, 0x94, 0xA8, 0xEF, 0xBC, 0x89, 0x22, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x55, 0x6E, 0x69, 0x74, 0x22, 0x3A, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x52, 0x61, 0x74, 0x69, 0x6F, 0x22, 0x3A, 0x20, 0x30, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x3A, 0x20, 0x34, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7D, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x7B, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6C, 0x69, 0x6E, 0x6B, 0xE6, 0x7A, 0x6C, 0x88, 0xE5, 0xA4, 0x87, 0xE7, 0x94, 0xA8, 0xEF, 0xBC, 0x89, 0x22, 0x2C, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x55, 0x6E, 0x69, 0x74, 0x22, 0x3A, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x2C };
            bool find = MaintainProtocol.FindOneFrame(b, out start, out len, out mainFunc, out subFucn, out data);
            if (find)
            {
                MessageBox.Show($"start: {start}, len: {len}, mainFunc: {mainFunc}, subFucn: {subFucn}, data: {MaintainProtocol.ByteArryToString(data, 0, data.Length)}");
            }
            else
            {
                MessageBox.Show("not found");
            }
        }
    }
}